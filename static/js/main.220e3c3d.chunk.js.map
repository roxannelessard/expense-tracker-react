{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","year","getFullYear","day","className","Card","classes","children","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesFilter","onChange","event","target","value","selected","Expenses","filteredYear","setFilteredYear","onChangeFilter","selectedYear","items","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","App","expenses","expense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.220e3c3d.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  // Add .toISOString() because it is a date object\n  const month = props.date.toLocaleString(\"en-us\", { month: \"long\" });\n  const year = props.date.getFullYear();\n  const day = props.date.toLocaleString(\"en-us\", { day: \"2-digit\" });\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import './Card.css';\n\nconst Card = (props) => {\n  // don't forget to put the whitespace to separate de class names (it is a long string)\n  const classes = 'card ' + props.className;\n\n  return (\n    // children is what's inside my Card component\n    <div className={classes}>{props.children}</div>\n  )\n}\n\nexport default Card;\n","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport React, { useState } from 'react';\n\nconst ExpenseItem = (props) => {\n  // with use state we're creating a variable which will lead to call this function again\n  // props.title is the default value\n  // it returns a function which we can then call to assign a new value\n  // (we'll be assigning new values by calling a function) for that UseState returns an array [currentStateValue, updatingFunction]\n  // so we use array destructuring to store the elements\n  // state is separated on a per component basis\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    // by calling setTitle() the component return by the function will be executed again!\n    setTitle(\"Updated\");\n    console.log(title);\n  };\n  return (\n    // you can't use your custom components as wrappers around other kind of content\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n      </div>\n      <div className=\"expense-item__price\">{props.amount}</div>\n      {/* you write clickHandler without the () because you just want to point at the function & not execute the code right now */}\n      <button onClick={clickHandler}>Change title</button>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    console.log(event.target.value)\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select onChange={dropdownChangeHandler} value={props.selected}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from 'react';\n\nconst Expenses = (props) => {\n\n  const [filteredYear, setFilteredYear] = useState('2021');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter onChangeFilter={filterChangeHandler} selected={filteredYear}/>\n        <ExpenseItem\n          // we can rename expenses for items to make the code more clear\n          title={props.items[0].title}\n          amount={props.items[0].amount}\n          date={props.items[0].date}\n        />\n        <ExpenseItem\n          title={props.items[1].title}\n          amount={props.items[1].amount}\n          date={props.items[1].date}\n        />\n        <ExpenseItem\n          title={props.items[2].title}\n          amount={props.items[2].amount}\n          date={props.items[2].date}\n        />\n        <ExpenseItem\n          title={props.items[3].title}\n          amount={props.items[3].amount}\n          date={props.items[3].date}\n        />\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import './ExpenseForm.css'\nimport { useState } from 'react';\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  // We can replace these 3 lines above by 1 line (calling an object)\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   // need to copy the other keys because to make sure we dont loose this data while updating the state\n    //   // to do so we use ...userInput (pulls out all the key-values pairs and brings them to this new objects), which replace: enteredAmount: \"\", enteredDate: \"\",\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // the approach below is the one to go because React will guarantee that the state snapshot given in this function will always be the latest state snapshot\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value }\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    //   });\n    };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    // ...userInput,\n    //   enteredDate: event.target.value,\n    //   });\n    };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n\n    props.onSaveExpenseData(expenseData);\n\n    // to clear the form after submit\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"date\"\n            min=\"2021-01-01\"\n            max=\"2021-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import './NewExpense.css'\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler =(enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\n    </div>\n  )\n};\n\nexport default NewExpense;\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst App = () => {\n  const expenses = [\n    {\n      id: \"e1\",\n      title: \"Pour Over Kettle\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Health Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const addExpenseHandler = expense => {\n    console.log('In App.js');\n    console.log(expense);\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      {/* display expenses list by passing expense items */}\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}